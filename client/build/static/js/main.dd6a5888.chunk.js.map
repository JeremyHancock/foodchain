{"version":3,"sources":["utils/api.js","components/ConsumerSignIn.js","components/VendorSignIn.js","components/ConsumerSignup.js","components/VendorSignup.js","pages/SignIn.js","pages/DisplayCodeData.js","pages/Consumer.js","components/CreateCode.js","components/CreateProduct.js","components/CreateLink.js","pages/Vendor.js","pages/NoMatch.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["api","getConsumer","id","axios","get","getConsumers","deleteConsumer","delete","postConsumer","consumerData","post","getVendor","user_name","getVendorById","getVendors","deleteVendor","postVendor","vendorData","getProduct","getProducts","deleteProduct","postProduct","productData","getLink","getLinks","deleteLink","postLink","LinkData","ConsumerSignIn","props","react_default","a","createElement","onClick","isNew","className","onSubmit","handleConsumerFormSubmit","name","type","value","placeholder","onChange","handleChange","user_password","VendorSignIn","handleVendorFormSubmit","ConsumerSignup","handleNewConsumerSubmit","person_name","email","phone_number","VendorSignup","handleNewVendorSubmit","company_name","location","website","SignInPage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLoggedIn","isVendor","bind","assertThisInitialized","checkVendorLogIn","checkConsumerLogIn","setState","event","_event$target","target","defineProperty","newLogin","consumer","_this2","preventDefault","API","then","res","data","map","window","pathname","concat","alert","catch","err","console","log","vendor","_this3","_this4","newVendor","JSON","stringify","_this5","newConsumer","checked","components_VendorSignIn","assign","components_ConsumerSignIn","components_ConsumerSignup","components_VendorSignup","Component","urlChunks","href","split","urlPieces","length","linkLocations","linkCreatedAt","companyNames","vendorLocations","websites","DisplayCodeDataPage","product_name","chemicals_used","harvest_date","product_createdAt","certified_organic","company_names","vendor_locations","vendor_notes","link_locations","link_createdAt","link_notes","code_data","product_id","link_id","slice","loading","getVendorInfo","push","forEach","link","createdAt","vendor_id","input","newStop","lastNames","lastLocs","lastLinks","chainStrings","p","chain","stops","stop","ConsumerPage","result","scannerOn","handleScan","cutUrl","handleError","error","lib_default","delay","onError","onScan","style","width","saveImage","require","saveSvgAsPng","document","getElementById","scale","QRMaker","dist_modules","bgColor","fgColor","level","codedUrl","date","Date","toLocaleDateString","chemicals","CreateProduct","glyphosphate","atrazine","metolachlorS","dichloropropene","twoFourD","code_value","handleFormSubmit","isOrganic","hasChemicals","toString","newProduct","newLink","CreateCode","windowReset","isProduct","other","toLocaleTimeString","CreateLink","linkCreated","link_date","usernameFromUrl","reset","VendorPage","newScan","components_CreateProduct","components_CreateLink","NoMatch","role","aria-label","Header","Footer","App","components_Header","BrowserRouter","Switch","Route","exact","path","component","components_Footer","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dd6a5888.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n  // Gets the consumer with the given id\n  getConsumer: function (id) {\n    return axios.get(\"/api/consumers/\" + id);\n  },\n  // Gets all consumers\n  getConsumers: function () {\n    return axios.get(\"/api/consumers/\");\n  },\n  // Deletes the consumer with the given id\n  deleteConsumer: function (id) {\n    return axios.delete(\"/api/consumers/\" + id);\n  },\n  // Saves a consumer to the database\n  postConsumer: function (consumerData) {\n    return axios.post(\"/api/consumers\", consumerData);\n  },\n\n  // Gets the vendor with the given id\n  getVendor: function (user_name) {\n    return axios.get(\"/api/vendors/user/\" + user_name);\n  },\n  // Gets the vendor with the given id\n  getVendorById: function (id) {\n    return axios.get(\"/api/vendors/id/\" + id);\n  },\n  // Gets all vendors\n  getVendors: function () {\n    return axios.get(\"/api/vendors/\");\n  },\n  // Deletes the vendor with the given id\n  deleteVendor: function (id) {\n    return axios.delete(\"/api/vendors/\" + id);\n  },\n  // Saves a vendor to the database\n  postVendor: function (vendorData) {\n    return axios.post(\"/api/vendors\", vendorData);\n  },\n\n  // Gets the product with the given id\n  getProduct: function (id) {\n    return axios.get(\"/api/products/\" + id);\n  },\n  // Gets all products\n  getProducts: function () {\n    return axios.get(\"/api/products/\");\n  },\n  // Deletes the product with the given id\n  deleteProduct: function (id) {\n    return axios.delete(\"/api/products/\" + id);\n  },\n  // Saves a product to the database\n  postProduct: function (productData) {\n    return axios.post(\"/api/products\", productData);\n  },\n\n  // Gets the Link with the given id\n  getLink: function (id) {\n    return axios.get(\"/api/links/\" + id);\n  },\n  // Gets all Links\n  getLinks: function () {\n    return axios.get(\"/api/links/\");\n  },\n  // Deletes the Link with the given id\n  deleteLink: function (id) {\n    return axios.delete(\"/api/links/\" + id);\n  },\n  // Saves a Link to the database\n  postLink: function (LinkData) {\n    return axios.post(\"/api/links\", LinkData);\n  // },\n\n  // // Gets the Code with the given id\n  // getCode: function (code_data) {\n  //   return axios.get(\"/api/codes/\" + code_data);\n  // },\n  // // Gets all Codes\n  // getCodes: function () {\n  //   return axios.get(\"/api/codes/\");\n  // },\n  // // Deletes the Code with the given id\n  // deleteCode: function (id) {\n  //   return axios.delete(\"/api/codes/\" + id);\n  // },\n  // // Saves a Code to the database\n  // postCode: function (CodeData) {\n  //   return axios.post(\"/api/codes\", CodeData);\n  }\n};\n","import React from \"react\";\n// import \"./style.css\"\n\n\nfunction ConsumerSignIn(props) {\n  return (\n    <div>\n      <h2>Customer Sign In</h2>\n      <p onClick={props.isNew}>Or Sign Up</p>\n      <div className=\"form-group\">\n        <form onSubmit={props.handleConsumerFormSubmit}>\n          <p className=\"form-label\">User Name:</p>\n          <input\n            name=\"user_name\"\n            className=\"form-control\"\n            type=\"text\"\n            value={props.user_name}\n            placeholder=\"username\"\n            onChange={props.handleChange}\n          />\n          <br />\n          <p className=\"form-label\">Password:</p>\n          <input\n            name=\"user_password\"\n            className=\"form-control\"\n            type=\"password\"\n            value={props.user_password}\n            placeholder=\"password\"\n            onChange={props.handleChange}\n          />\n          <br />\n          <button className=\"btn btn-success\">Submit</button>\n        </form>\n      </div>\n    </div >\n  );\n}\n\nexport default ConsumerSignIn;\n","import React from \"react\";\n// import \"./style.css\"\n\n\nfunction VendorSignIn(props) {\n  return (\n    <div>\n      <h2>Vendor Sign In</h2>\n      <p onClick={props.isNew}>Or Sign Up</p>\n      <div className=\"form-group\">\n        <form onSubmit={props.handleVendorFormSubmit}>\n          <p className=\"form-label\">User Name:</p>\n          <input\n            name=\"user_name\"\n            className=\"form-control\"\n            type=\"text\"\n            value={props.user_name}\n            placeholder=\"username\"\n            onChange={props.handleChange}\n          />\n          <br />\n          <p className=\"form-label\">Password:</p>\n          <input\n            name=\"user_password\"\n            className=\"form-control\"\n            type=\"password\"\n            value={props.user_password}\n            placeholder=\"password\"\n            onChange={props.handleChange}\n          />\n          <br />\n            <button className=\"btn btn-success\">Submit</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default VendorSignIn;\n","import React from \"react\";\n\n// import \"./style.css\"\n\nfunction ConsumerSignup(props) {\n\n    return (\n      <div>\n        <h1>Customer Signup</h1>\n        <p onClick={props.isNew}>Or Sign In</p>\n        <div className=\"form-group\">\n          <form onSubmit={props.handleNewConsumerSubmit}>\n            <p className=\"form-label\">Name:</p>\n            <input\n              name=\"person_name\"\n              className=\"form-control\"\n              type=\"text\"\n              value={props.person_name}\n              placeholder=\"First Lasterson\"\n              onChange={props.handleChange}\n            />\n            <br />\n            <p className=\"form-label\">Email:</p>\n            <input\n              name=\"email\"\n              className=\"form-control\"\n              type=\"text\"\n              value={props.email}\n              placeholder=\"me@me.com\"\n              onChange={props.handleChange}\n            />\n            <br />\n            <p className=\"form-label\">Mobile:</p>\n            <input\n              name=\"phone_number\"\n              className=\"form-control\"\n              type=\"text\"\n              value={props.phone_number}\n              placeholder=\"789-123-4560\"\n              onChange={props.handleChange}\n            />\n            <br />\n            <p className=\"form-label\">User Name:</p>\n            <input\n              name=\"user_name\"\n              className=\"form-control\"\n              type=\"text\"\n              value={props.user_name}\n              placeholder=\"username\"\n              onChange={props.handleChange}\n            />\n            <br />\n            <p className=\"form-label\">Password:</p>\n            <input\n              name=\"user_password\"\n              className=\"form-control\"\n              type=\"password\"\n              value={props.user_password}\n              placeholder=\"password\"\n              onChange={props.handleChange}\n            />\n            <br />\n            <button className=\"btn btn-success\">Submit</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n\nexport default ConsumerSignup;\n","import React from \"react\";\n// import \"./style.css\"\n\nfunction VendorSignup (props) {\n\n    return (\n      <div>\n        <h1>Vendor Signup</h1>\n        <p onClick={props.isNew}>Or Sign In</p>\n        <div className=\"form-group\">\n          <form onSubmit={props.handleNewVendorSubmit}>\n            <p className=\"form-label\">Company Name:</p>\n            <input\n              name=\"company_name\"\n              className=\"form-control\"\n              type=\"text\"\n              value={props.company_name}\n              placeholder=\"Good Business, Inc.\"\n              onChange={props.handleChange}\n            />\n            <br />\n            <p className=\"form-label\">Location:</p>\n            <input\n              name=\"location\"\n              className=\"form-control\"\n              type=\"text\"\n              value={props.location}\n              placeholder=\"City, State/Province, Country\"\n              onChange={props.handleChange}\n            />\n            <br />\n            <p className=\"form-label\">Email:</p>\n            <input\n              name=\"email\"\n              className=\"form-control\"\n              type=\"text\"\n              value={props.email}\n              placeholder=\"me@goodbusiness.com\"\n              onChange={props.handleChange}\n            />\n            <br />\n            <p className=\"form-label\">Phone Number:</p>\n            <input\n              name=\"phone_number\"\n              className=\"form-control\"\n              type=\"text\"\n              value={props.phone_number}\n              placeholder=\"789-123-4560\"\n              onChange={props.handleChange}\n            />\n            <br />\n            <p className=\"form-label\">Website:</p>\n            <input\n              name=\"website\"\n              className=\"form-control\"\n              type=\"text\"\n              value={props.website}\n              placeholder=\"www.goodbusiness.com\"\n              onChange={props.handleChange}\n            />\n            <br />\n            <p className=\"form-label\">User Name:</p>\n            <input\n              name=\"user_name\"\n              className=\"form-control\"\n              type=\"text\"\n              value={props.user_name}\n              placeholder=\"username\"\n              onChange={props.handleChange}\n            />\n            <br />\n            <p className=\"form-label\">Password:</p>\n            <input\n              name=\"user_password\"\n              className=\"form-control\"\n              type=\"password\"\n              value={props.user_password}\n              placeholder=\"password\"\n              onChange={props.handleChange}\n            />\n            <br />\n            <button className=\"btn btn-success\">Submit</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n\nexport default VendorSignup;\n","import React, { Component } from \"react\";\nimport API from \"../utils/api\";\n\nimport ConsumerSignIn from \"../components/ConsumerSignIn\";\nimport VendorSignIn from \"../components/VendorSignIn\";\nimport ConsumerSignUp from \"../components/ConsumerSignup\";\nimport VendorSignUp from \"../components/VendorSignup\";\n\nclass SignInPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false,\n      isVendor: false,\n      isNew: false,\n      user_name: \"\",\n      user_password: \"\",\n      email: \"\",\n      phone_number: \"\",\n      person_name: \"\",\n      website: \"\",\n      location: \"\",\n      company_name: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.checkVendorLogIn = this.checkVendorLogIn.bind(this);\n    this.checkConsumerLogIn = this.checkConsumerLogIn.bind(this);\n    this.handleConsumerFormSubmit = this.handleConsumerFormSubmit.bind(this);\n    this.handleVendorFormSubmit = this.handleVendorFormSubmit.bind(this);\n    this.isVendor = this.isVendor.bind(this);\n    this.isNew = this.isNew.bind(this);\n    this.handleNewVendorSubmit = this.handleNewVendorSubmit.bind(this);\n    this.handleNewConsumerSubmit = this.handleNewConsumerSubmit.bind(this);\n  }\n\n  isVendor() {\n    if (this.state.isVendor) {\n      this.setState({ isVendor: false });\n    } else {\n      this.setState({ isVendor: true });\n    }\n  }\n  isNew() {\n    if (this.state.isNew) {\n      this.setState({ isNew: false });\n    } else {\n      this.setState({ isNew: true });\n    }\n  }\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n  checkConsumerLogIn(newLogin, consumer) {\n    if (\n      newLogin.user_name === consumer.user_name &&\n      newLogin.user_password === consumer.user_password\n    ) {\n      this.setState({\n        isLoggedIn: true,\n        user_name: newLogin.user_name\n      });\n    }\n  }\n  handleConsumerFormSubmit(event) {\n    event.preventDefault();\n    const newLogin = this.state;\n    API.getConsumers()\n      .then(res => {\n        res.data.map(consumer => this.checkConsumerLogIn(newLogin, consumer));\n      })\n      .then(res => {\n        this.state.isLoggedIn\n          ? (window.location.pathname = `/consumer/${this.state.user_name}`)\n          : alert(\n              \"Username or password is incorrect. Please try again or sign up.\"\n            );\n      })\n      .catch(err => console.log(err));\n  }\n  checkVendorLogIn(newLogin, vendor) {\n    if (\n      newLogin.user_name === vendor.user_name &&\n      newLogin.user_password === vendor.user_password\n    ) {\n      this.setState({\n        isLoggedIn: true,\n        user_name: newLogin.user_name\n      });\n    }\n  }\n  handleVendorFormSubmit(event) {\n    event.preventDefault();\n    const newLogin = this.state;\n    API.getVendors()\n      .then(res => {\n        res.data.map(vendor => this.checkVendorLogIn(newLogin, vendor));\n      })\n      .then(res => {\n        this.state.isLoggedIn\n          ? (window.location.pathname = `/vendor/${this.state.user_name}`)\n          : alert(\n              \"Username or password is incorrect. Please try again or sign up.\"\n            );\n      })\n      .catch(err => console.log(err));\n  }\n  handleNewVendorSubmit(event) {\n    event.preventDefault();\n    const newVendor = this.state;\n    API.getVendors().then(res => {\n      res.data.map(vendor =>\n        vendor.user_name === newVendor.user_name\n          ? alert(\n              \"That username is already in use. Please select something else.\"\n            )\n          : console.log(\"not a match\")\n      );\n    });\n    !newVendor.company_name ||\n    !newVendor.email ||\n    !newVendor.phone_number ||\n    !newVendor.user_password ||\n    !newVendor.location ||\n    !newVendor.user_name\n      ? alert(\"You must fill in all fields to create a profile.\")\n      : console.log(\"good entry\");\n    API.postVendor(newVendor)\n      .then(res => {\n        console.log(\"Vendor saved! \" + JSON.stringify(res.data));\n        window.location.pathname = `/vendor/${this.state.user_name}`;\n      })\n      .catch(err => console.log(err));\n  }\n  handleNewConsumerSubmit(event) {\n    event.preventDefault();\n    const newConsumer = this.state;\n    API.getConsumers().then(res => {\n      res.data.map(consumer =>\n        consumer.user_name === newConsumer.user_name\n          ? alert(\n              \"That user name is already in use. Please select something else.\"\n            )\n          : console.log(\"Unique!\")\n      );\n    });\n    !newConsumer.user_name ||\n    !newConsumer.email ||\n    !newConsumer.phone_number ||\n    !newConsumer.user_password ||\n    !newConsumer.person_name\n      ? alert(\"You must fill in all fields to create a profile.\")\n      : console.log(\"All fields found!\");\n\n    API.postConsumer(newConsumer)\n      .then(res => {\n        console.log(\"Consumer saved! \" + JSON.stringify(res.data));\n        window.location.pathname = `/consumer/${this.state.user_name}`;\n      })\n      .catch(err => console.log(err));\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"form-group\">\n          <form>\n            <h3>I am a{\"  \"}\n              <input\n                type=\"radio\"\n                name=\"isConsumer\"\n                value=\"consumer\"\n                checked={!this.state.isVendor}\n                onChange={this.isVendor}\n              /> Consumer{\"  \"}\n              <input\n                type=\"radio\"\n                name=\"isVendor\"\n                value=\"vendor\"\n                checked={this.state.isVendor}\n                onChange={this.isVendor}\n              /> Producer \n            </h3>\n          </form>\n        </div>\n        {!this.state.isNew && this.state.isVendor ? (\n          <VendorSignIn\n            {...this.state}\n            handleChange={this.handleChange}\n            handleVendorFormSubmit={this.handleVendorFormSubmit}\n            isVendor={this.isVendor}\n            isNew={this.isNew}\n          />\n        ) : null}\n\n        {!this.state.isNew && !this.state.isVendor ? (\n          <ConsumerSignIn\n            {...this.state}\n            handleChange={this.handleChange}\n            handleConsumerFormSubmit={this.handleConsumerFormSubmit}\n            isVendor={this.isVendor}\n            isNew={this.isNew}\n          />\n        ) : null}\n        {this.state.isNew && !this.state.isVendor ? (\n          <ConsumerSignUp\n            {...this.state}\n            handleChange={this.handleChange}\n            handleNewConsumerSubmit={this.handleNewConsumerSubmit}\n            isVendor={this.isVendor}\n            isNew={this.isNew}\n          />\n        ) : null}\n        {this.state.isNew && this.state.isVendor ? (\n          <VendorSignUp\n            {...this.state}\n            handleChange={this.handleChange}\n            handleNewVendorSubmit={this.handleNewVendorSubmit}\n            isVendor={this.isVendor}\n            isNew={this.isNew}\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\nexport default SignInPage;\n","import React, { Component } from \"react\";\nimport API from \"../utils/api\";\nimport { join } from \"upath\";\n\nconst url = window.location.href;\nconst urlChunks = url.split(\"/\");\nconst urlPieces = urlChunks[4] ? urlChunks[4].split(\"lki\") : [];\nlet numberOfLinks = urlPieces.length - 2;\nconsole.log(urlPieces);\nlet linkLocations = [];\nlet linkCreatedAt = [];\nlet companyNames = [];\nlet vendorLocations = [];\nlet websites = [];\nlet productData = [];\nclass DisplayCodeDataPage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      product_name: \"\",\n      chemicals_used: \"\",\n      harvest_date: \"\",\n      product_createdAt: \"\",\n      certified_organic: false,\n      company_names: [],\n      vendor_locations: [],\n      vendor_notes: [],\n      link_locations: [],\n      link_createdAt: [],\n      link_notes: [],\n      websites: [],\n      code_data: urlPieces[0],\n      product_id: urlPieces[1],\n      link_id: urlPieces.slice(2),\n      loading: true\n    };\n    this.getVendorInfo = this.getVendorInfo.bind(this);\n  }\n  componentDidMount() {\n    API.getProduct(this.state.product_id)\n      .then(res => {\n        // console.log(\"Product info: \" + JSON.stringify(res.data));\n        productData.push(res.data);\n      })\n      .then(() => {\n        const links = this.state.link_id;\n        links.forEach(link =>\n          API.getLink(link).then(res => {\n            // console.log(\"Link info: \" + JSON.stringify(res.data));\n            linkCreatedAt.push(res.data.createdAt);\n            linkLocations.push(res.data.location);\n            this.getVendorInfo(res.data.vendor_id);\n          })\n        );\n      });\n  }\n\n  getVendorInfo(input) {\n    const vendor = input;\n    API.getVendorById(vendor)\n      .then(res => {\n        if (res.data) {\n          // console.log(\"Vendor info: \" + JSON.stringify(res.data));\n          companyNames.push(res.data.company_name);\n          vendorLocations.push(res.data.location);\n          websites.push(res.data.website);\n        }\n      })\n      .then(() => {\n        this.setState({\n          loading: false,\n          product_name: productData[0].product_name,\n          harvest_date: productData[0].harvest_date,\n          chemicals_used: productData[0].chemicals_used,\n          certified_organic: productData[0].certified_organic,\n          vendor_notes: productData[0].vendor_notes,\n          product_createdAt: productData[0].createdAt,\n          link_locations: linkLocations,\n          link_createdAt: linkCreatedAt,\n          company_names: companyNames,\n          websites: websites,\n          vendor_locations: vendorLocations\n        });\n      });\n  }\n\n  render() {\n    // get all stops in the chain except product origin\n    const lastNames = this.state.company_names.slice(\n      1,\n      this.state.company_names.length\n    );\n    const lastLocs = this.state.vendor_locations.slice(\n      1,\n      this.state.vendor_locations.length\n    );\n    const lastLinks = this.state.link_createdAt.slice(\n      1,\n      this.state.link_createdAt.length\n    );\n\n\n    // Declare an array to hold text strings to describe each stop\n    let chainStrings = [];\n    let newStop;\n    \n    // chain uses the modified arrays to construct a text string for each stop\n    const chain = () => {\n      console.log(lastLocs.length);\n      for (var p = 0; p < lastLocs.length; p++) {\n        newStop = `From there, it arrived at ${lastNames[p]} in ${lastLocs[p]} on ${lastLinks[p]}`;\n        chainStrings.push(newStop);\n      }\n    };\n\n    // call the chain function\n    chain();\n    \n    // map the array to create a <p> tag for each stop\n    const stops = chainStrings.map(stop => {\n      return <p> {stop} </p>;\n    });\n\n    return (\n      <div>\n        {!this.state.loading ? (\n          <div>\n            <p>\n              {`This ${this.state.product_name} started out at ${\n                this.state.company_names[0]\n              } \n                in ${\n                  this.state.vendor_locations[0]\n                }. They wanted us to tell you this: \"${\n                this.state.vendor_notes\n              }\"`}\n            </p>\n            <div>{stops}</div>\n          </div>\n        ) : (\n          <div>Loading ... </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default DisplayCodeDataPage;\n","import React, { Component } from 'react'\nimport QrReader from 'react-qr-reader'\n\n\n\nclass ConsumerPage extends Component {\n    state = {\n        result: 'Please scan a product',\n        scannerOn: true,\n    }\n\n    handleScan = data => {\n        if (data) {\n            const cutUrl = data.split(\"scan\");\n            console.log(cutUrl);\n            this.setState({\n                result: data,\n                scannerOn: false\n            })\n            window.location.pathname = `scan${cutUrl[1]}`;\n        }\n    }\n    handleError = err => { console.error(err) }\n\n    render() {\n        return (\n            <div>\n                <div className=\"scanner\">\n                    <QrReader\n                        delay={300}\n                        onError={this.handleError}\n                        onScan={this.handleScan}\n                        style={{ width: '100%' }}\n                    />\n                </div>\n                <p>{this.state.result}</p>\n            </div>\n        )\n    }\n}\nexport default ConsumerPage;","import React from \"react\";\nimport { QRCode } from 'react-qr-svg';\n\n//https://www.npmjs.com/package/react-qr-svg\n// https://github.com/zpao/qrcode.react\n// value: '', The value to encode in the code\n// level: 'L',  QR Error correction level\n// bgColor: '#FFFFFF',  Color of the bright squares\n// fgColor: '#000000',  Color of the dark squares\n\nfunction saveImage() {\n    const saveSvg = require('save-svg-as-png');\n    saveSvg.saveSvgAsPng(document.getElementById(\"qr\"), \"foodchain.png\", {scale: 10});\n}\n\nfunction QRMaker(props) {\n    return (\n        <div className=\"qr-holder\">\n            <QRCode\n                onClick={saveImage}\n                id=\"qr\"\n                bgColor=\"#FFFFFF\"\n                fgColor=\"#000000\"\n                level=\"Q\"\n                style={{ width: 200 }}\n                value={props.codedUrl}\n            />\n            <button className=\"btn btn-success\" onClick={saveImage}>Save</button>\n        </div>\n    );\n}\nexport default QRMaker;\n","import React, { Component } from \"react\";\nimport API from \"../utils/api\";\nimport CreateCode from \"../components/CreateCode\";\n\nconst d = new Date();\nconst date = d.toLocaleDateString();\nlet chemicals = [];\n\nclass CreateProduct extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      product_id: 1,\n      product_name: \"\",\n      link_id: 1,\n      harvest_date: date,\n      chemicals_used: \"\",\n      glyphosphate: false,\n      atrazine: false,\n      metolachlorS: false,\n      dichloropropene: false,\n      twoFourD: false,\n      certified_organic: false,\n      vendor_notes: \"\",\n      code_value: props.code_value,\n      codedUrl: \"\",\n      location: \"\",\n      vendor_id: props.vendor_id\n\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.isOrganic = this.isOrganic.bind(this);\n    this.hasChemicals = this.hasChemicals.bind(this);\n  }\n  isOrganic() {\n    if (this.state.certified_organic) {\n      this.setState({ certified_organic: false });\n    } else {\n      this.setState({ certified_organic: true });\n    }\n  }\n\n  hasChemicals() {\n    //push chemical into this.state.chemicals_used if (this.state.[chemical]) === true\n    if (this.state.glyphosphate) {\n      chemicals.push(\"Glyphosphate\");\n    }\n    if (this.state.atrazine) {\n      chemicals.push(\"Atrazine\");\n    }\n    if (this.state.metolachlorS) {\n      chemicals.push(\"Metolachlor-S\");\n    }\n    if (this.state.dichloropropene) {\n      chemicals.push(\"Dichloropropene\");\n    }\n    if (this.state.twoFourD) {\n      chemicals.push(\"2,4-D\");\n    }\n    console.log(\"Line 81: \" + chemicals);\n    this.setState({ chemicals_used: chemicals.toString() });\n    console.log(\"Line 83: \" + chemicals.toString());\n  }\n\n  handleChange(event) {\n    const { name, value, type, checked } = event.target;\n    type === \"checkbox\"\n      ? this.setState({ [name]: checked })\n      : this.setState({ [name]: value });\n  }\n\n  handleFormSubmit(event) {\n    event.preventDefault();\n    this.hasChemicals();\n    const newProduct = this.state;\n    !newProduct.harvest_date || !newProduct.product_name || !newProduct.certified_organic ?\n      alert(\"You must fill in all required fields to create a new product.\")\n      : console.log(this.state);\n    API.postProduct(newProduct)\n      .then(res => {\n        console.log(\"Product saved! \" + JSON.stringify(res.data));\n        this.setState({ product_id: res.data.id });\n        console.log(\"New product's id: \" + this.state.product_id);\n      })\n      .then(res => {\n        const newLink = this.state;\n        API.postLink(newLink)\n          .then(res => {\n            console.log(\"Link saved! \" + JSON.stringify(res.data));\n            this.setState({\n              link_id: res.data.id,\n              // for production\n              // codedUrl: `localhost:3000/scan/${newLink.code_value}lki${newLink.product_id}lki${res.data.id}`,\n              // for deployment\n              codedUrl: `https://foodchains.herokuapp.com/scan/${newLink.code_value}lki${newLink.product_id}lki${res.data.id}` \n            });\n            console.log(\"New link's id: \" + this.state.link_id);\n          })\n          //     .catch(err => console.log(err));\n          // })\n          .catch(err => console.log(err));\n      })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <div>\n        {/* Render the CreateCode component if codedUrl is truthy (has a value) */}\n        {this.state.codedUrl ?\n          <div>\n            <CreateCode codedUrl={this.state.codedUrl} />\n            <div>\n              <p>Success! You scanned a {this.state.product_name}.</p>\n              <p>You have created the first link in a Foodchain! This code needs to be sent with your product so that it can be scanned by the next link in the Foodchain.</p>\n              <p>Please save or print this image. It can be included with invoices, shipping manifests, or printed and displayed on shelf labels.</p>\n            </div>\n            <div className=\"button-group\">\n              <button className=\"btn btn-success\" onClick={this.props.windowReset}>Scan a code</button>\n              <button className=\"btn btn-success\" onClick={this.props.isProduct}>Enter a new item</button>\n            </div>\n          </div>\n\n          :\n          <div>\n            <button className=\"btn btn-success new-product-nav\" onClick={this.props.isProduct}>Scan a code</button>\n            <h1>Create Product</h1>\n            <div className=\"form-group\">\n              <form onSubmit={this.handleFormSubmit}>\n                <p className=\"form-label\">Product Name:</p>\n                <input\n                  name=\"product_name\"\n                  className=\"form-control\"\n                  type=\"text\"\n                  value={this.state.product_name}\n                  onChange={this.handleChange}\n                />\n                <br />\n                <p className=\"form-label\">Harvest Date:</p>\n                <input\n                  name=\"harvest_date\"\n                  className=\"form-control\"\n                  type=\"text\"\n                  value={this.state.harvest_date}\n                  onChange={this.handleChange}\n                />\n                <br />\n                <p className=\"form-label\">Chemicals Used?</p>\n                <p>\n                  <input\n                    type=\"checkbox\"\n                    name=\"glyphosphate\"\n                    checked={this.state.glyphosphate}\n                    onChange={this.handleChange}\n                  />\n                  {\"  \"}\n                  Glyphosphate{\"  \"}\n                </p>\n                <p>\n                  <input\n                    type=\"checkbox\"\n                    name=\"atrazine\"\n                    checked={this.state.atrazine}\n                    onChange={this.handleChange}\n                  />\n                  {\"  \"}\n                  Atrazine{\"  \"}\n                </p>\n                <p>\n                  <input\n                    type=\"checkbox\"\n                    name=\"metolachlorS\"\n                    checked={this.state.metolachlorS}\n                    onChange={this.handleChange}\n                  />\n                  {\"  \"}\n                  Metolchlor-S{\"  \"}\n                </p>\n                <p>\n                  <input\n                    type=\"checkbox\"\n                    name=\"dichloropropene\"\n                    checked={this.state.dichloropropene}\n                    onChange={this.handleChange}\n                  />\n                  {\"  \"}\n                  Dichloropropene{\"  \"}\n                </p>\n                <p>\n                  <input\n                    type=\"checkbox\"\n                    name=\"twoFourD\"\n                    checked={this.state.twoFourD}\n                    onChange={this.handleChange}\n                  />\n                  {\"  \"}\n                  2,4-D <br />\n                  <input\n                    type=\"checkbox\"\n                    name=\"other\"\n                    checked={this.state.other}\n                    onChange={this.handleChange}\n                  />\n                  {\"  \"}\n                  Other (list):{\" \"}\n                  <input\n                    id=\"other\"\n                    name=\"other\"\n                    className=\"form-control\"\n                    type=\"text\"\n                    value={this.state.other}\n                    onChange={this.handleChange}\n                  />\n                  <br />\n                  <br />\n                </p>\n                <p>Is This Product Certified Organic?</p>\n                <p>\n                  <input\n                    type=\"radio\"\n                    name=\"certified_organic\"\n                    value=\"true\"\n                    checked={this.state.certified_organic === true}\n                    onChange={this.isOrganic}\n                  />\n                  Yes{\" \"}\n                  <input\n                    type=\"radio\"\n                    name=\"certified_organic\"\n                    value=\"false\"\n                    checked={this.state.certified_organic === false}\n                    onChange={this.isOrganic}\n                  />\n                  {\"  \"}\n                  No\n            </p>\n                <p className=\"form-label\">Notes / Comments:</p>\n                <input\n                  name=\"vendor_notes\"\n                  className=\"form-control\"\n                  type=\"text\"\n                  value={this.state.vendor_notes}\n                  placeholder=\"Additional details...\"\n                  onChange={this.handleChange}\n                />\n                <br />\n                <button className=\"btn btn-success\">Submit</button>{\" \"}\n              </form>\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default CreateProduct;\n","import React, { Component } from \"react\";\nimport QrReader from \"react-qr-reader\";\nimport API from \"../utils/api\";\nimport CreateCode from \"./CreateCode\";\n\nconst d = new Date();\nconst date = d.toLocaleTimeString();\n\nclass CreateLink extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: \"\",\n            scannerOn: true,\n            vendor_id: this.props.vendor_id,\n            link_date: date,\n            product_id: this.props.product_id,\n            location: this.props.location,\n            link_id: \"\",\n            codedUrl: \"\",\n            linkCreated: false\n\n        }\n        this.postLink = this.postLink.bind(this);\n    };\n\n    postLink() {\n        const newLink = this.state;\n        API.postLink(newLink)\n            .then(res => {\n                this.setState({\n                    link_id: res.data.id,\n                    codedUrl: `${this.state.result}lki${res.data.id}`,\n                    linkCreated: true\n                });\n                console.log(\"Link saved! \" + JSON.stringify(res.data));\n            })\n            .catch(err => console.log(err));\n    }\n    handleScan = data => {\n        if (data) {\n            const urlChunks = data.split(\"scan\");\n            const urlPieces = urlChunks[1].split(\"lki\");\n            console.log(urlPieces);\n            API.getProduct(urlPieces[1])\n                .then(res => {\n                    this.setState({\n                        result: data,\n                        scannerOn: false,\n                        product_id: urlPieces[1],\n                        vendor_id: this.props.vendor_id,\n                        product_name: res.data.product_name,\n                        linkCreated: true\n                    })\n                    this.postLink();\n                })\n        }\n    }\n    handleError = err => { console.error(err) }\n    render() {\n        return (\n            <div>\n                {this.state.scannerOn ?\n                    <div>\n                        {/* <p className=\"confirm-info\">Scan the code with your camera. Use the viewer box below to center it and try to hold it steady.</p> */}\n                        <QrReader\n                            className=\"scanner\"\n                            delay={300}\n                            onError={this.handleError}\n                            onScan={this.handleScan}\n                        />\n                        <div className=\"instructions\">\n                            <p> Please scan the Foodchain code with your camera. Use the viewer box to center the code.</p>\n                            <p>If asked, please allow this application access to your camera.</p>\n                            <div className=\"button-group\">\n                                <button className=\"btn btn-success\" >Scan a code</button>\n                                <button className=\"btn btn-success\" onClick={this.props.isProduct}>Enter a new item</button>\n                            </div>\n                        </div>\n                    </div>\n                    : null}\n                <div className=\"confirm-info\">\n                    {this.state.linkCreated ?\n                        <div>\n                            <p>Success! You scanned a {this.state.product_name}.</p>\n                            <p>You have created a new link in the Foodchain! This code needs to be sent with your product so that it can be scanned by the next link in the Foodchain.</p>\n                            <p>Please save or print this image. It can be included with invoices, shipping manifests, or printed and displayed on shelf labels.</p>\n                            <p>The code you just scanned can be discarded. This code now contains all the information about this {this.state.product_name}.</p>\n                        </div>\n                        :\n                        <div>\n                            <ul>Your information\n                                    <li>Company name: {this.props.company_name}</li>\n                                <li>Location: {this.props.location}</li>\n                            </ul>\n                        </div>\n                    }\n                </div>\n                <div>\n                    <div>\n                        {this.state.codedUrl ?\n                            <div>\n                                <CreateCode codedUrl={this.state.codedUrl} />\n                                <div className=\"button-group\">\n                                    <button className=\"btn btn-success\" onClick={this.props.windowReset}>Scan a code</button>\n                                    <button className=\"btn btn-success\" onClick={this.props.isProduct}>Enter a new item</button>\n                                </div>\n                            </div>\n                            : null}\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default CreateLink;","import React, { Component } from \"react\";\nimport CreateProduct from \"../components/CreateProduct\";\nimport CreateLink from \"../components/CreateLink\";\nimport API from \"../utils/api\";\n\nconst url = window.location.href;\nconst urlPieces = url.split(\"/\");\nconst usernameFromUrl = urlPieces[4];\nlet reset = window.location.pathname\n\nclass VendorPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: 'Add a new product',\n            newProduct: false,\n            newScan: true,\n            vendor_id: \"\",\n            code_value: \"cvl\",\n            company_name: \"\",\n            location: \"\",\n            website: \"\",\n            product_id: \"\"\n        }\n        this.windowReset = this.windowReset.bind(this);\n        this.isProduct = this.isProduct.bind(this);\n        this.getVendor = this.getVendor.bind(this);\n    }\n\n    componentDidMount() {\n        this.getVendor();\n    }\n\n    getVendor() {\n        API.getVendor(usernameFromUrl)\n            .then(res => {\n                this.setState({\n                    company_name: res.data.company_name,\n                    location: res.data.location,\n                    website: res.data.website,\n                    vendor_id: res.data.id\n                });\n                console.log(this.state);\n            })\n    }\n    isProduct() {\n        if (this.state.newProduct) {\n            this.setState({\n                newProduct: false,\n                newScan: true,\n                result: 'Scan a code'\n            });\n        } else {\n            this.setState({\n                newProduct: true,\n                newScan: false,\n                result: 'Add a new product'\n            });\n        }\n    }\n    windowReset = () => { window.location.pathname = reset }\n\n    render() {\n        return (\n            <div>\n                {/* <button className=\"btn btn-success\" onClick={this.isProduct}>{this.state.result}</button> */}\n                {!this.state.newProduct ?\n                    <CreateLink\n                        vendor_id={this.state.vendor_id}\n                        company_name={this.state.company_name}\n                        location={this.state.location}\n                        website={this.state.website}\n                        code_value={this.state.code_value}\n                        product_id={this.state.product_id}\n                        isProduct={this.isProduct}\n                        windowReset={this.windowReset}\n                    />\n                    :\n                    <CreateProduct\n                        vendor_id={this.state.vendor_id}\n                        code_value={this.state.code_value}\n                        isProduct={this.isProduct}\n                        windowReset={this.windowReset}\n                    />\n                }\n            </div>\n        );\n    }\n}\nexport default VendorPage;\n","import React from \"react\";\n\n\nfunction NoMatch() {\n    return (\n        <div>\n            <h1>404 Page Not Found</h1>\n            <h1>\n                <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                    🙄\n              </span>\n            </h1>\n        </div>\n    );\n}\n\nexport default NoMatch;\n","import React from \"react\";\n\nfunction Header() {\n  return (\n    <nav className=\"navbar navbar-dark navbar-fixed-top\">\n      <a className=\"navbar-brand mx-auto navbar-text\" href=\"/\">\n        FOODCHAIN\n      </a>\n    </nav>\n  );\n}\n\nexport default Header;","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <nav className=\"footer\">\n      <div className=\"footer-text\">\n        Food Chain is a farm-to-table app to track how food travels from growers\n        to consumers.\n      </div>\n    </nav>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport SignInPage from \"./pages/SignIn\";\nimport DisplayCodeDataPage from \"./pages/DisplayCodeData\";\nimport ConsumerPage from \"./pages/Consumer\";\nimport VendorPage from \"./pages/Vendor\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Router>\n          <div className=\"main\">\n            <Switch>\n              <Route exact path=\"/\" component={SignInPage} />\n              <Route path=\"/consumer\" component={ConsumerPage} />\n              <Route path=\"/scan\" component={DisplayCodeDataPage} />\n              <Route path=\"/vendor\" component={VendorPage} />\n              <Route component={NoMatch} />\n            </Switch>\n          </div>\n        </Router>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}