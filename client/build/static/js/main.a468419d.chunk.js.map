{"version":3,"sources":["utils/api.js","components/SignIn.js","pages/SignIn.js","components/ConsumerSignup.js","components/VendorSignup.js","components/ReadCode.js","pages/Consumer.js","components/CreateProduct.js","pages/Vendor.js","pages/NoMatch.js","App.js","serviceWorker.js","index.js"],"names":["api","axios","get","consumerData","post","vendorData","productData","SignIn","props","react_default","a","createElement","className","href","onSubmit","handleConsumerFormSubmit","name","type","value","cust_username","placeholder","onChange","handleChange","cust_password","handleVendorFormSubmit","vendor_username","vendor_password","SignInPage","Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLoggedIn","isVendor","isConsumer","bind","assertThisInitialized","checkLogIn","event","_event$target","target","setState","defineProperty","_this2","preventDefault","newLogin","API","then","res","data","map","consumer","user_name","user_password","alert","window","location","pathname","concat","console","log","vendor","_this3","catch","err","components_SignIn","assign","QRReader","result","handleScan","handleError","error","lib_default","delay","onError","onScan","style","width","ConsumerPage","ReadCode","date","Date","toLocaleDateString","CreateProduct","vendor_id","harvest_date","chemicals_used","certified_organic","vendor_notes","handleFormSubmit","newProduct","JSON","stringify","VendorPage","components_CreateProduct","NoMatch","role","aria-label","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a468419d.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n  // Gets the consumer with the given id\n  getConsumer: function(id) {\n    return axios.get(\"/api/consumers/\" + id);\n  },\n  // Gets all consumers\n  getConsumers: function() {\n    return axios.get(\"/api/consumers/\");\n  },\n  // Deletes the consumer with the given id\n  deleteConsumer: function(id) {\n    return axios.delete(\"/api/consumers/\" + id);\n  },\n  // Saves a consumer to the database\n  postConsumer: function(consumerData) {\n    return axios.post(\"/api/consumers\", consumerData);\n  },\n\n  // Gets the vendor with the given id\n  getVendor: function(id) {\n    return axios.get(\"/api/vendors/\" + id);\n  },\n  // Gets all vendors\n  getVendors: function() {\n    return axios.get(\"/api/vendors/\");\n  },\n  // Deletes the vendor with the given id\n  deleteVendor: function(id) {\n    return axios.delete(\"/api/vendors/\" + id);\n  },\n  // Saves a vendor to the database\n  postVendor: function(vendorData) {\n    return axios.post(\"/api/vendors\", vendorData);\n  },\n\n  // Gets the product with the given id\n  getProduct: function(id) {\n    return axios.get(\"/api/products/\" + id);\n  },\n  // Gets all products\n  getProducts: function() {\n    return axios.get(\"/api/products/\");\n  },\n  // Deletes the product with the given id\n  deleteProduct: function(id) {\n    return axios.delete(\"/api/products/\" + id);\n  },\n  // Saves a product to the database\n  postProduct: function(productData) {\n    return axios.post(\"/api/products\", productData);\n  }\n};\n","import React, { Component } from \"react\";\n// import \"./style.css\"\n\n\nfunction SignIn(props) {\n  return (\n    <div className=\"main\">\n      <h2>Customer Sign In</h2>\n      <a href=\"#\">Or Sign Up</a>\n      <div className=\"form-group\">\n        <form onSubmit={props.handleConsumerFormSubmit}>\n          <p className=\"form-label\">User Name:</p>\n          <input\n            name=\"cust_username\"\n            className=\"form-control\"\n            type=\"text\"\n            value={props.cust_username}\n            placeholder=\"username\"\n            onChange={props.handleChange}\n          />\n          <br />\n          <p className=\"form-label\">Password:</p>\n          <input\n            name=\"cust_password\"\n            className=\"form-control\"\n            type=\"password\"\n            value={props.cust_password}\n            placeholder=\"password\"\n            onChange={props.handleChange}\n          />\n          <br />\n            <button className=\"btn btn-success\">Submit</button>\n        </form>\n      </div>\n      <br />\n      <h2>Vendor Sign In</h2>\n      <a href=\"#\">Or Sign Up</a>\n      <div className=\"form-group\">\n        <form onSubmit={props.handleVendorFormSubmit}>\n          <p className=\"form-label\">User Name:</p>\n          <input\n            name=\"vendor_username\"\n            className=\"form-control\"\n            type=\"text\"\n            value={props.vendor_username}\n            placeholder=\"username\"\n            onChange={props.handleChange}\n          />\n          <br />\n          <p className=\"form-label\">Password:</p>\n          <input\n            name=\"vendor_password\"\n            className=\"form-control\"\n            type=\"password\"\n            value={props.vendor_password}\n            placeholder=\"password\"\n            onChange={props.handleChange}\n          />\n          <br />\n            <button type=\"button\" className=\"btn btn-success\">Submit</button>\n        </form>\n        <br /><br />\n        <p>\n          Food Chain is a farm-to-table app to track how food travels from growers to consumers.\n\n          </p>\n      </div>\n    </div>\n  );\n}\n\nexport default SignIn;\n","import React, { Component } from \"react\";\nimport API from \"../utils/api\";\n\nimport SignIn from \"../components/SignIn\";\nimport ConsumerSignUp from \"../components/ConsumerSignup\";\nimport VendorSignUp from \"../components/VendorSignup\";\n\nclass SignInPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoggedIn: true,\n            isVendor: false,\n            isConsumer: false,\n            cust_username: \"\",\n            cust_password: \"\",\n            vendor_username: \"\",\n            vendor_password: \"\"\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.checkLogIn = this.checkLogIn.bind(this);\n        this.handleConsumerFormSubmit = this.handleConsumerFormSubmit.bind(this);\n        this.handleVendorFormSubmit = this.handleVendorFormSubmit.bind(this);\n    }\n    handleChange(event) {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleConsumerFormSubmit(event) {\n        event.preventDefault();\n        const newLogin = this.state;\n        API.getConsumers()\n            .then(res => {\n                res.data.map(consumer => (\n                    newLogin.cust_username === consumer.user_name && newLogin.cust_password === consumer.user_password ?\n                        this.setState(\n                            {\n                                isLoggedIn: true,\n                                cust_username: newLogin.cust_username,\n                                cust_password: \"\",\n                                vendor_username: \"\",\n                                vendor_password: \"\"\n                            })\n                        : alert(\"Username or password is incorrect. Please try again or sign up.\")\n                ));\n                this.state.isLoggedIn ? window.location.pathname = `/consumer/${this.state.cust_username}` : console.log(\"didn't work\")\n            });\n    };\n    checkLogIn(newLogin, vendor) {\n        if (newLogin.vendor_username === vendor.user_name && newLogin.vendor_password === vendor.user_password) {\n            this.setState({\n                isLoggedIn: true,\n                vendor_username: newLogin.vendor_username,\n            })\n            if (this.state.isLoggedIn) {\n                window.location.pathname = `/vendor/${this.state.vendor_username}`\n            }\n    }\n}\nhandleVendorFormSubmit(event) {\n    event.preventDefault();\n    const newLogin = this.state;\n    API.getVendors()\n        .then(res => {\n            res.data.map(vendor => (\n                this.checkLogIn(newLogin, vendor)\n            ))\n        })\n        .then(res =>{\n            console.log(this.state.isLoggedIn);\n        this.state.isLoggedIn ? window.location.pathname = `/vendor/${this.state.vendor_username}`:     alert(\"Username or password is incorrect. Please try again or sign up.\")\n\n        })\n        .catch(err => console.log(err));\n\n};\n\nrender() {\n    return (\n        <div>\n\n            <SignIn\n                {...this.state}\n                handleChange={this.handleChange}\n                handleConsumerFormSubmit={this.handleConsumerFormSubmit}\n                handleVendorFormSubmit={this.handleVendorFormSubmit}\n            />\n        </div>\n    );\n}\n}\nexport default SignInPage;\n","import React, { Component } from \"react\";\nimport API from \"../utils/api\";\n\n// import \"./style.css\"\n\nclass ConsumerSignup extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user_name: \"\",\n      email: \"\",\n      phone_number: \"\",\n      user_password: \"\",\n      person_name: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit(event) {\n    event.preventDefault();\n    const newConsumer = this.state;\n    API.getConsumers()\n      .then(res => {\n        res.data.map(consumer => (\n          consumer.user_name === newConsumer.user_name ? alert(\"That user name is already in use. Please select something else.\") : console.log(\"not a match\")\n        )\n        )\n      })\n    !(newConsumer.user_name) || (!(newConsumer.email)) || (!(newConsumer.phone_number)) || (!(newConsumer.user_password)) || (!(newConsumer.person_name)) ?\n      alert(\"You must fill in all fields to create a profile.\") : console.log(\"good entry\");\n\n    API.postConsumer(newConsumer)\n      .then(res => {\n        console.log(\"Consumer saved! \" + JSON.stringify(res.data));\n        this.setState(\n          {\n            user_name: \"\",\n            email: \"\",\n            phone_number: \"\",\n            user_password: \"\",\n            person_name: \"\"\n          }\n        )\n      })\n      .catch(err => console.log(\"ERR--->>> src/components/ConsumerSignup.js line 34: \" + err));\n  };\n\n  render() {\n    return (\n      <div className=\"main\">\n        <h1>Customer Signup</h1>\n        <div className=\"form-group\">\n          <form onSubmit={this.handleFormSubmit}>\n            <p className=\"form-label\">Name:</p>\n            <input\n              name=\"person_name\"\n              className=\"form-control\"\n              type=\"text\"\n              value={this.state.person_name}\n              placeholder=\"First Lasterson\"\n              onChange={this.handleChange}\n            />\n            <br />\n            <p className=\"form-label\">Email:</p>\n            <input\n              name=\"email\"\n              className=\"form-control\"\n              type=\"text\"\n              value={this.state.email}\n              placeholder=\"me@me.com\"\n              onChange={this.handleChange}\n            />\n            <br />\n            <p className=\"form-label\">Mobile:</p>\n            <input\n              name=\"phone_number\"\n              className=\"form-control\"\n              type=\"text\"\n              value={this.state.phone_number}\n              placeholder=\"789-123-4560\"\n              onChange={this.handleChange}\n            />\n            <br />\n            <p className=\"form-label\">User Name:</p>\n            <input\n              name=\"user_name\"\n              className=\"form-control\"\n              type=\"text\"\n              value={this.state.user_name}\n              placeholder=\"username\"\n              onChange={this.handleChange}\n            />\n            <br />\n            <p className=\"form-label\">Password:</p>\n            <input\n              name=\"user_password\"\n              className=\"form-control\"\n              type=\"password\"\n              value={this.state.user_password}\n              placeholder=\"password\"\n              onChange={this.handleChange}\n            />\n            <br />\n            <button type=\"button\" className=\"btn btn-dark\">Submit</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ConsumerSignup;\n","import React, { Component } from \"react\";\nimport API from \"../utils/api\";\n// import \"./style.css\"\n\nclass VendorSignup extends Component {\n  constructor() {\n    super();\n    this.state = {\n      company_name: \"\",\n      email: \"\",\n      phone_number: \"\",\n      website: \"\",\n      location: \"\",\n      user_name: \"\",\n      user_password: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleFormSubmit(event) {\n    event.preventDefault();\n    const newVendor = this.state;\n    API.getVendors()\n      .then(res => {\n        res.data.map(vendor => (\n          vendor.user_name === newVendor.user_name ? alert(\"That user name is already in use. Please select something else.\") : console.log(\"not a match\")\n        )\n        )\n      })\n    !(newVendor.company_name) || !(newVendor.email) || !(newVendor.phone_number) || !(newVendor.user_password) || !(newVendor.location) || !(newVendor.user_name) ?\n      alert(\"You must fill in all fields to create a profile.\") : console.log(\"good entry\")\n    API.postVendor(newVendor)\n      .then(res => {\n        console.log(\"Vendor saved! \" + JSON.stringify(res.data));\n        this.setState(\n          {\n            company_name: \"\",\n            email: \"\",\n            phone_number: \"\",\n            website: \"\",\n            location: \"\",\n            user_name: \"\",\n            user_password: \"\"\n          }\n        )\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div className=\"main\">\n        <h1>Vendor Signup</h1>\n        <div className=\"form-group\">\n          <form onSubmit={this.handleFormSubmit}>\n            <p className=\"form-label\">Company Name:</p>\n            <input\n              name=\"company_name\"\n              className=\"form-control\"\n              type=\"text\"\n              value={this.state.company_name}\n              placeholder=\"Good Business, Inc.\"\n              onChange={this.handleChange}\n            />\n            <br />\n            <p className=\"form-label\">Location:</p>\n            <input\n              name=\"location\"\n              className=\"form-control\"\n              type=\"text\"\n              value={this.state.location}\n              placeholder=\"City, State/Province, Country\"\n              onChange={this.handleChange}\n            />\n            <br />\n            <p className=\"form-label\">Email:</p>\n            <input\n              name=\"email\"\n              className=\"form-control\"\n              type=\"text\"\n              value={this.state.email}\n              placeholder=\"me@goodbusiness.com\"\n              onChange={this.handleChange}\n            />\n            <br />\n            <p className=\"form-label\">Phone Number:</p>\n            <input\n              name=\"phone_number\"\n              className=\"form-control\"\n              type=\"text\"\n              value={this.state.phone_number}\n              placeholder=\"789-123-4560\"\n              onChange={this.handleChange}\n            />\n            <br />\n            <p className=\"form-label\">Website:</p>\n            <input\n              name=\"website\"\n              className=\"form-control\"\n              type=\"text\"\n              value={this.state.website}\n              placeholder=\"www.goodbusiness.com\"\n              onChange={this.handleChange}\n            />\n            <br />\n            <p className=\"form-label\">User Name:</p>\n            <input\n              name=\"user_name\"\n              className=\"form-control\"\n              type=\"text\"\n              value={this.state.user_name}\n              placeholder=\"username\"\n              onChange={this.handleChange}\n            />\n            <br />\n            <p className=\"form-label\">Password:</p>\n            <input\n              name=\"user_password\"\n              className=\"form-control\"\n              type=\"password\"\n              value={this.state.user_password}\n              placeholder=\"password\"\n              onChange={this.handleChange}\n            />\n            <br />\n            <button className=\"btn btn-dark\">Submit</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default VendorSignup;\n","import React, { Component } from 'react'\nimport QrReader from 'react-qr-reader'\n\nclass QRReader extends Component {\n  state = {\n    result: 'No result'\n  }\n\n  handleScan = data => {\n    if (data) {\n      this.setState({\n        result: data\n      })\n    }\n  }\n  handleError = err => {\n    console.error(err)\n  }\n  render() {\n    return (\n      <div>\n        <QrReader\n          delay={300}\n          onError={this.handleError}\n          onScan={this.handleScan}\n          style={{ width: '25%' }}\n        />\n        {console.log(this.state.result)};\n        <p>{this.state.result}</p>\n      </div>\n    )\n  }\n}\nexport default QRReader;","import React from \"react\";\nimport ReadCode from \"../components/ReadCode\";\n\nfunction ConsumerPage() {\n    return (\n        <div>\n            <ReadCode />\n        </div>\n    );\n}\n\nexport default ConsumerPage;\n","import React, { Component } from \"react\";\nimport API from \"../utils/api\";\n// import \"./style.css\"\n\nvar d = new Date();\nvar date = d.toLocaleDateString();\n\nclass CreateProduct extends Component {\n  constructor() {\n    super();\n    this.state = {\n      vendor_id: \"\", \n      harvest_date: date,\n      chemicals_used: \"\",\n      certified_organic: \"\",\n      vendor_notes: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleFormSubmit(event) {\n    event.preventDefault();\n    const newProduct = this.state;\n    !newProduct.harvest_date ||\n    !newProduct.chemicals_used ||\n    !newProduct.certified_organic\n      ? alert(\"You must fill in all required fields to create a new product.\")\n      : console.log(\"good entry\");\n    API.postProduct(newProduct)\n      .then(res => {\n        console.log(\"Product saved! \" + JSON.stringify(res.data));\n        this.setState({\n          vendor_id: \"\",\n          harvest_date: \"\",\n          chemicals_used: \"\",\n          certified_organic: \"\",\n          vendor_notes: \"\"\n        });\n      })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <div className=\"main\">\n        <h1>Create Product</h1>\n        <div className=\"form-group\">\n          <form onSubmit={this.handleFormSubmit}>\n            <p className=\"form-label\">Vendor ID:</p>\n            <input\n              name=\"vendor_id\"\n              className=\"form-control\"\n              type=\"text\"\n              value={this.state.vendor_id}\n              placeholder=\"This should auto-populate\"\n              onChange={this.handleChange}\n            />\n            <br />\n            <p className=\"form-label\">Harvest Date:</p>\n            <input\n              name=\"harvest_date\"\n              className=\"form-control\"\n              type=\"text\"\n              value={this.state.harvest_date}\n              // placeholder={\"01/23/2019\"} /*would be cool to have it auto-populate with the current date and then be editable as needed*/\n              onChange={this.handleChange}\n            />\n            <br />\n            <p className=\"form-label\">What Chemicals Were Used?</p>\n            <input\n              name=\"chemicals_used\"\n              className=\"form-control\"\n              type=\"text\"\n              value={this.state.chemicals_used}\n              placeholder=\"fertilizer name, pesticide name\"\n              onChange={this.handleChange}\n            />\n            <br />\n            <p className=\"form-label\">Is This Product Certified Organic?</p>\n            <input\n              name=\"certified_organic\"\n              className=\"form-control\"\n              type=\"text\"\n              value={this.state.certified_organic}\n              placeholder=\"I'll make this a pair of radios with a boolean switch\"\n              onChange={this.handleChange}\n            />\n            <br />\n            <p className=\"form-label\">Notes / Comments:</p>\n            <input\n              name=\"vendor_notes\"\n              className=\"form-control\"\n              type=\"text\"\n              value={this.state.vendor_notes}\n              placeholder=\"Additional details...\"\n              onChange={this.handleChange}\n            />\n            <br />\n            <button className=\"btn btn-dark\">Submit</button>{\" \"}\n            {/* this should generate the QR code */}\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CreateProduct;\n","import React from \"react\";\nimport CreateProduct from \"../components/CreateProduct\";\n\n\nfunction VendorPage() {\n    return (\n        <div>\n            <CreateProduct />\n        </div>\n    );\n}\n\nexport default VendorPage;\n","import React from \"react\";\n\n\nfunction NoMatch() {\n    return (\n        <div>\n            <h1>404 Page Not Found</h1>\n            <h1>\n                <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                    🙄\n              </span>\n            </h1>\n        </div>\n    );\n}\n\nexport default NoMatch;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport SignInPage from './pages/SignIn';\nimport ConsumerPage from './pages/Consumer';\nimport VendorPage from './pages/Vendor'; \nimport NoMatch from './pages/NoMatch';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n          <Switch>\n            <Route exact path=\"/\" component={SignInPage} />\n            <Route path=\"/consumer\" component={ConsumerPage} />\n            <Route path=\"/vendor\" component={VendorPage} />\n            <Route component={NoMatch} />\n          </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}